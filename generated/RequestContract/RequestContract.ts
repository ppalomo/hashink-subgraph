// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeePercentChanged extends ethereum.Event {
  get params(): FeePercentChanged__Params {
    return new FeePercentChanged__Params(this);
  }
}

export class FeePercentChanged__Params {
  _event: FeePercentChanged;

  constructor(event: FeePercentChanged) {
    this._event = event;
  }

  get feePercent(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestCreated extends ethereum.Event {
  get params(): RequestCreated__Params {
    return new RequestCreated__Params(this);
  }
}

export class RequestCreated__Params {
  _event: RequestCreated;

  constructor(event: RequestCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get responseTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get created(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class RequestDeleted extends ethereum.Event {
  get params(): RequestDeleted__Params {
    return new RequestDeleted__Params(this);
  }
}

export class RequestDeleted__Params {
  _event: RequestDeleted;

  constructor(event: RequestDeleted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get responseTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get created(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class RequestMinted extends ethereum.Event {
  get params(): RequestMinted__Params {
    return new RequestMinted__Params(this);
  }
}

export class RequestMinted__Params {
  _event: RequestMinted;

  constructor(event: RequestMinted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get responseTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get created(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get imageURI(): string {
    return this._event.parameters[6].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class WalletChanged extends ethereum.Event {
  get params(): WalletChanged__Params {
    return new WalletChanged__Params(this);
  }
}

export class WalletChanged__Params {
  _event: WalletChanged;

  constructor(event: WalletChanged) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RequestContract__requestsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class RequestContract extends ethereum.SmartContract {
  static bind(address: Address): RequestContract {
    return new RequestContract("RequestContract", address);
  }

  feePercent(): BigInt {
    let result = super.call("feePercent", "feePercent():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feePercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feePercent", "feePercent():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBalance(): BigInt {
    let result = super.call("getBalance", "getBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRequesterBalance(addr: Address): BigInt {
    let result = super.call(
      "getRequesterBalance",
      "getRequesterBalance(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getRequesterBalance(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequesterBalance",
      "getRequesterBalance(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numRequests(): BigInt {
    let result = super.call("numRequests", "numRequests():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numRequests(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numRequests", "numRequests():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberOfPendingRequests(): BigInt {
    let result = super.call(
      "numberOfPendingRequests",
      "numberOfPendingRequests():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfPendingRequests(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfPendingRequests",
      "numberOfPendingRequests():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestIsLocked(id: BigInt): boolean {
    let result = super.call(
      "requestIsLocked",
      "requestIsLocked(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toBoolean();
  }

  try_requestIsLocked(id: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "requestIsLocked",
      "requestIsLocked(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  requests(param0: BigInt): RequestContract__requestsResult {
    let result = super.call(
      "requests",
      "requests(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new RequestContract__requestsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_requests(
    param0: BigInt
  ): ethereum.CallResult<RequestContract__requestsResult> {
    let result = super.tryCall(
      "requests",
      "requests(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RequestContract__requestsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  wallet(): Address {
    let result = super.call("wallet", "wallet():(address)", []);

    return result[0].toAddress();
  }

  try_wallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("wallet", "wallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateRequestCall extends ethereum.Call {
  get inputs(): CreateRequestCall__Inputs {
    return new CreateRequestCall__Inputs(this);
  }

  get outputs(): CreateRequestCall__Outputs {
    return new CreateRequestCall__Outputs(this);
  }
}

export class CreateRequestCall__Inputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }

  get signers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get responseTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateRequestCall__Outputs {
  _call: CreateRequestCall;

  constructor(call: CreateRequestCall) {
    this._call = call;
  }
}

export class DeleteRequestCall extends ethereum.Call {
  get inputs(): DeleteRequestCall__Inputs {
    return new DeleteRequestCall__Inputs(this);
  }

  get outputs(): DeleteRequestCall__Outputs {
    return new DeleteRequestCall__Outputs(this);
  }
}

export class DeleteRequestCall__Inputs {
  _call: DeleteRequestCall;

  constructor(call: DeleteRequestCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteRequestCall__Outputs {
  _call: DeleteRequestCall;

  constructor(call: DeleteRequestCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _autographContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintRequestCall extends ethereum.Call {
  get inputs(): MintRequestCall__Inputs {
    return new MintRequestCall__Inputs(this);
  }

  get outputs(): MintRequestCall__Outputs {
    return new MintRequestCall__Outputs(this);
  }
}

export class MintRequestCall__Inputs {
  _call: MintRequestCall;

  constructor(call: MintRequestCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get signers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get imageURI(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class MintRequestCall__Outputs {
  _call: MintRequestCall;

  constructor(call: MintRequestCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeePercentCall extends ethereum.Call {
  get inputs(): SetFeePercentCall__Inputs {
    return new SetFeePercentCall__Inputs(this);
  }

  get outputs(): SetFeePercentCall__Outputs {
    return new SetFeePercentCall__Outputs(this);
  }
}

export class SetFeePercentCall__Inputs {
  _call: SetFeePercentCall;

  constructor(call: SetFeePercentCall) {
    this._call = call;
  }

  get _feePercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeePercentCall__Outputs {
  _call: SetFeePercentCall;

  constructor(call: SetFeePercentCall) {
    this._call = call;
  }
}

export class SetWalletCall extends ethereum.Call {
  get inputs(): SetWalletCall__Inputs {
    return new SetWalletCall__Inputs(this);
  }

  get outputs(): SetWalletCall__Outputs {
    return new SetWalletCall__Outputs(this);
  }
}

export class SetWalletCall__Inputs {
  _call: SetWalletCall;

  constructor(call: SetWalletCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWalletCall__Outputs {
  _call: SetWalletCall;

  constructor(call: SetWalletCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
